buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'android-apt'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.goodjok'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 17
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    //关闭Android Studio的PNG合法性检查的

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            zipAlignEnabled true  //是否支持zip
            minifyEnabled false
            debuggable false  //是否支持调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            zipAlignEnabled true  //是否支持zip
            minifyEnabled false
            debuggable true  //是否支持调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        //即使报错也不会停止打包
        checkReleaseBuilds false
        //打包release版本的时候进行检测
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }

    useLibrary 'org.apache.http.legacy'
}



def dbflow_version = rootProject.ext.dependencies.dbflow_version
def dagger_version = rootProject.ext.dependencies.dagger_version
def butterknife_version = rootProject.ext.dependencies.butterknife_version
def rxandroid_version = rootProject.ext.dependencies.rxandroid_version
def rxjava_version = rootProject.ext.dependencies.rxjava_version
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':godspeed-common')

    compile ("io.reactivex:rxandroid:${rxandroid_version}") {
        exclude module: 'rxjava', group: 'io.reactivex'
    }
    compile "io.reactivex:rxjava:${rxjava_version}"


    //数据库框架
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    compile ("com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"){
        exclude module: 'support-annotations', group: 'com.android.support'
        exclude module: 'dbflow-core', group: 'com.github.Raizlabs.DBFlow'
    }

    // Dagger 对象注入框架，类似spring 使用方式，用于代码解耦
    compile "com.google.dagger:dagger:${dagger_version}"

    provided 'org.glassfish:javax.annotation:10.0-b28'

    apt "com.jakewharton:butterknife-compiler:${butterknife_version}"
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    apt "com.google.dagger:dagger-compiler:${dagger_version}"


}